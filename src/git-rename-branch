#!/usr/bin/env bash
source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/helpers/helpers.sh"


function preconditions {
  target_branch_name=$1
  destination_branch_name=$2
  force_parameter=$3

  force_rename=false
  if [ "$force_parameter" == "-f" ]; then
    force_rename=true
  fi

  if [ "$(is_main_branch "$target_branch_name")" = true ]; then
    echo_error_header
    echo_error "The main branch cannot be renamed."
    exit_with_error newline
  fi

  if [ -z "$target_branch_name" ]; then
    echo_error_header
    echo_error "No branch name provided to rename."
    exit_with_error newline
  fi

  if [ -z "$destination_branch_name" ]; then
    echo_error_header
    echo_error "No branch name provided to rename to."
    exit_with_error newline
  fi

  if [ "$target_branch_name" != "$INITIAL_BRANCH_NAME" ]; then
    ensure_has_branch "$target_branch_name"
  fi

  if [ "$force_rename" = false ]; then
    ensure_is_feature_branch "$target_branch_name" "Run 'git rename-branch $target_branch_name $destination_branch_name -f' to force the rename, then reconfigure git-town on any other clones of this repo."
  fi

  if [ "$target_branch_name" == "$destination_branch_name" ]; then
    echo "Renaming branch to same name, nothing needed."
    exit_with_status 0
  fi

  if [ "$HAS_REMOTE" = true ]; then
    fetch

    if [ "$(has_tracking_branch "$target_branch_name")" = true ]; then
      local local_branch_sha=$(sha_of_branch "$target_branch_name")
      local remote_branch_sha=$(sha_of_branch "origin/$target_branch_name")

      if [ "$local_branch_sha" != "$remote_branch_sha" ]; then
        echo_error_header
        echo_error "The branch is not in sync with its tracking branch. Run 'git sync $target_branch_name' to sync the branch.'"
        exit_with_error newline
      fi
    fi
  fi

  ensure_does_not_have_branch "$destination_branch_name"
  parent_branch_name=$(parent_branch "$target_branch_name")

  export STASH_OPEN_CHANGES=true
}


function steps {
  echo "create_and_checkout_branch '$destination_branch_name' '$target_branch_name'"

  if [ "$(has_tracking_branch "$target_branch_name")" = true ]; then
    echo "create_tracking_branch $destination_branch_name"
    echo "delete_remote_branch $target_branch_name"
  fi

  if [ "$(is_perennial_branch "$target_branch_name")" = true ]; then
    echo "remove_perennial_branch $target_branch_name"
    echo "add_perennial_branch $destination_branch_name"
  fi

  # update branch hierarchy information
  echo_update_child_branches "$target_branch_name" "$destination_branch_name"
  echo delete_parent_entry "$target_branch_name"
  echo store_parent_branch "$destination_branch_name" "$parent_branch_name"
  echo "delete_all_ancestor_entries"

  echo "delete_local_branch '$target_branch_name' force"
}


run "$@"
