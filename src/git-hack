#!/usr/bin/env bash
source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/helpers/helpers.sh"


function ensure_has_target_branch {
  if [ -z "$target_branch_name" ]; then
    echo_error_header
    echo_error "No branch name provided."
    exit_with_error newline
  fi
}


function preconditions {
  target_branch_name=$1
  ensure_has_target_branch

  parent_branch_name=$2
  if [ -z "$parent_branch_name" ]; then
    parent_branch_name=$MAIN_BRANCH_NAME
  elif [ "$parent_branch_name" == '.' ]; then
    parent_branch_name=$INITIAL_BRANCH_NAME
  fi
  ensure_has_branch "$parent_branch_name"

  if [ "$(has_remote_url)" = true ]; then
    fetch
  fi

  ensure_does_not_have_branch "$target_branch_name"

  export STASH_OPEN_CHANGES=true
}


function steps {
  # sync the parent branch
  for branch_name in $(ancestor_branches "$parent_branch_name"); do
    sync_branch_steps "$branch_name"
  done
  sync_branch_steps "$parent_branch_name"

  echo "create_and_checkout_feature_branch $target_branch_name $parent_branch_name"
  echo_if_true "create_tracking_branch $target_branch_name" "$HAS_REMOTE"
}


run "$@"
