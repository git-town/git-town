linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - deadcode
    - depguard
    # - dogsled (TODO: write rational for disabling here, brought over from Makefile)
    # - dupl (TODO: write rational for disabling here, brought over from Makefile)
    - errcheck
    - exhaustive
    - funlen
    # - gochecknoglobals (TODO: write rational for disabling here, brought over from Makefile)
    # - gochecknoinits (TODO: write rational for disabling here, brought over from Makefile)
    - gocognit
    # - goconst (TODO: write rational for disabling here, brought over from Makefile)
    - gocritic
    - gocyclo
    - godot
    - godox
    # - goerr113 (TODO: expose errors proerply, once/if approaching library use, as oposed to current cli-only use)
    - gofmt
    - goimports
    - golint
    # - gomnd (TODO: write rational for disabling here, brought over from Makefile)
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    # - lll (TODO: write rational for disabling here, brought over from Makefile)
    - maligned
    - misspell
    - nakedret
    - nestif
    - nolintlint
    - prealloc
    - rowserrcheck
    - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    - testpackage
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    # - wsl  (TODO: write rational for disabling here, brought over from Makefile)

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  exclude:
    - Using the variable on range scope `(input|expected)` in function literal
