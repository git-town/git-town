#!/bin/bash
source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/helpers/helpers.sh"


# Called when pull_branch fails on the feature branch
function error_pull_feature_branch {
  create_merge_conflict_abort_script

  # Create the continue script
  add_to_continue_script "initial_open_changes=$initial_open_changes"
  add_to_continue_script "continue_merge"
  add_to_continue_script "merge_branch $main_branch_name"
  add_to_continue_script "push_branch"
  add_to_continue_script "restore_open_changes"

  exit_with_script_messages
}


# Called when pull_branch fails on the main branch
function error_pull_main_branch {
  create_rebase_conflict_abort_script

  # Create the continue script
  add_to_continue_script "initial_open_changes=$initial_open_changes"
  add_to_continue_script "continue_rebase"
  if [ "$(is_feature_branch "$initial_branch_name")" == true ]; then
    add_to_continue_script "push_branch"
    add_to_continue_script "checkout_branch $initial_branch_name"
    add_to_continue_script "pull_branch"
    add_to_continue_script "merge_branch $main_branch_name"
    add_to_continue_script "push_branch"
  else
    add_to_continue_script "push_branch"
    add_to_continue_script "push_tags"
  fi
  add_to_continue_script "restore_open_changes"

  exit_with_script_messages
}


# Called when pull_branch fails on a non feature branch
function error_pull_non_feature_branch {
  create_rebase_conflict_abort_script

  # Create the continue script
  add_to_continue_script "initial_open_changes=$initial_open_changes"
  add_to_continue_script "continue_rebase"
  add_to_continue_script "push_branch"
  add_to_continue_script "push_tags"
  add_to_continue_script "restore_open_changes"

  exit_with_script_messages
}


# Called when merge_branch fails
function error_merge_branch {
  create_merge_conflict_abort_script

  # Create the continue script
  add_to_continue_script "initial_open_changes=$initial_open_changes"
  add_to_continue_script "continue_merge"
  add_to_continue_script "push_branch"
  add_to_continue_script "restore_open_changes"

  exit_with_script_messages
}


# Perform the sync operation
function perform_sync {
  stash_open_changes
  if [ "$(is_feature_branch "$initial_branch_name")" == true ]; then
    checkout_main_branch
    sync_branch 'rebase'
    checkout_branch "$initial_branch_name"
    pull_branch
    merge_branch "$main_branch_name"
    push_branch
  else
    sync_branch 'rebase'
    push_tags
  fi
  restore_open_changes
}


if [ "$1" == "--abort" ]; then
  run_abort_script
elif [ "$1" == "--continue" ]; then
  ensure_no_conflicts "You must resolve the conflicts before continuing the git sync"
  run_continue_script
else
  perform_sync
fi

exit_with_success
