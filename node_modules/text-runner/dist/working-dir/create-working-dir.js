"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const tmp_promise_1 = __importDefault(require("tmp-promise"));
const unprinted_user_error_1 = require("../errors/unprinted-user-error");
/**
 * Creates the temp directory to run the tests in
 * @param configSetting TRUE: use system temp dir, FALSE: use local tmp dir, STRING: use given temp dir
 */
async function createWorkingDir(configSetting) {
    const workingDir = await getWorkingDirPath(configSetting);
    await fs_extra_1.default.ensureDir(workingDir);
    return workingDir;
}
exports.createWorkingDir = createWorkingDir;
async function getWorkingDirPath(setting) {
    if (typeof setting === "string") {
        return setting;
    }
    else if (setting === false) {
        return path_1.default.join(process.cwd(), "tmp");
    }
    else if (setting === true) {
        const tmpDir = await tmp_promise_1.default.dir();
        return tmpDir.path;
    }
    else {
        throw new unprinted_user_error_1.UnprintedUserError(`unknown 'useSystemTempDirectory' setting: ${setting}`);
    }
}
//# sourceMappingURL=create-working-dir.js.map