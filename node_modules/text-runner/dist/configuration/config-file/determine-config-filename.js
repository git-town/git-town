"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colorette_1 = __importDefault(require("colorette"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const printed_user_error_1 = require("../../errors/printed-user-error");
/**
 * Returns the filename for the config file
 *
 * @param cmdLineArgs
 */
async function determineConfigFilename(cmdLineArgs) {
    if (cmdLineArgs.configFileName == null) {
        try {
            await fs_extra_1.default.stat("text-run.yml");
            return "text-run.yml";
        }
        catch (e) {
            return "";
        }
    }
    // TODO: move this to the top of the method
    try {
        await fs_extra_1.default.stat(cmdLineArgs.configFileName);
        return cmdLineArgs.configFileName;
    }
    catch (e) {
        console.log(colorette_1.default.red(`configuration file ${colorette_1.default.cyan(cmdLineArgs.configFileName)} not found`));
        throw new printed_user_error_1.PrintedUserError();
    }
}
exports.determineConfigFilename = determineConfigFilename;
//# sourceMappingURL=determine-config-filename.js.map