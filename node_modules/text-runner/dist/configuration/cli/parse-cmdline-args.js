"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const minimist_1 = __importDefault(require("minimist"));
const path_1 = __importDefault(require("path"));
const available_commands_1 = require("../../commands/available-commands");
/**
 * Parses the command-line options received
 * and returns them structured as the command to run and options.
 *
 * @param argv the command-line options received by the process
 */
function parseCmdlineArgs(argv) {
    // remove optional unix node call
    if (path_1.default.basename(argv[0] || "") === "node") {
        argv.splice(0, 1);
    }
    // remove optional windows node call
    if (path_1.default.win32.basename(argv[0] || "") === "node.exe") {
        argv.splice(0, 1);
    }
    // remove optional linux text-run call
    if (path_1.default.basename(argv[0] || "") === "text-run") {
        argv.splice(0, 1);
    }
    // remove optional Windows CLI call
    if (argv[0] && argv[0].endsWith("dist\\cli.js")) {
        argv.splice(0, 1);
    }
    // remove optional debug arguments
    if (argv[0] && argv[0].endsWith("dist/cli.js")) {
        argv.splice(0, 1);
    }
    // parse argv into the result
    const cliArgs = minimist_1.default(argv, { boolean: ["offline", "keep-tmp"] });
    const result = {
        command: cliArgs._[0],
        configFileName: cliArgs.config,
        exclude: cliArgs.exclude,
        fileGlob: cliArgs._[1],
        formatterName: cliArgs.format,
        keepTmp: cliArgs["keep-tmp"],
        offline: cliArgs.offline,
        workspace: cliArgs.workspace
    };
    // handle special case where text-run is called without a command, as in "text-run foo.md"
    if (!available_commands_1.availableCommands().includes(cliArgs._[0])) {
        result.command = "run";
        result.fileGlob = cliArgs._[0];
    }
    return result;
}
exports.parseCmdlineArgs = parseCmdlineArgs;
//# sourceMappingURL=parse-cmdline-args.js.map