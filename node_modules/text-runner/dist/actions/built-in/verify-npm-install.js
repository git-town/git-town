"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colorette_1 = __importDefault(require("colorette"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const trim_dollar_1 = require("../helpers/trim-dollar");
async function verifyNpmInstall(args) {
    const installText = trim_dollar_1.trimDollar(args.nodes.textInNodeOfType("fence", "code"));
    const pkg = await fs_extra_1.default.readJSON(path_1.default.join(args.configuration.sourceDir, "package.json"));
    args.name(`verify NPM installs ${colorette_1.default.cyan(pkg.name)}`);
    if (missesPackageName(installText, pkg.name)) {
        throw new Error(`could not find ${colorette_1.default.cyan(pkg.name)} in installation instructions`);
    }
}
exports.default = verifyNpmInstall;
function missesPackageName(installText, packageName) {
    // Note: cannot use minimist here
    //       because it is too stupid to understand
    //       that NPM uses '-g' by itself, and not as a switch for the argument after it
    return (installText
        .split(" ")
        .map(word => word.trim())
        .filter(word => word === packageName).length === 0);
}
//# sourceMappingURL=verify-npm-install.js.map