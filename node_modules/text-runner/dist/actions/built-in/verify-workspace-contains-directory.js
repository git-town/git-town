"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colorette_1 = __importDefault(require("colorette"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
/**
 * The "verifyWorkspaceContainsDirectory" action verifies that the test workspace
 * contains the given directory.
 */
async function verifyWorkspaceContainsDirectory(args) {
    const directory = args.nodes.text();
    const fullPath = path_1.default.join(args.configuration.workspace, directory);
    args.name(`verifying the ${colorette_1.default.bold(colorette_1.default.cyan(directory))} directory exists in the test workspace`);
    args.log(`ls ${fullPath}`);
    let stats;
    try {
        stats = await fs_extra_1.default.lstat(fullPath);
    }
    catch (err) {
        throw new Error(`directory ${colorette_1.default.cyan(colorette_1.default.bold(directory))} does not exist in the test workspace`);
    }
    if (!stats.isDirectory()) {
        throw new Error(`${colorette_1.default.cyan(colorette_1.default.bold(directory))} exists but is not a directory`);
    }
}
exports.default = verifyWorkspaceContainsDirectory;
//# sourceMappingURL=verify-workspace-contains-directory.js.map