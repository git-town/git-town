import { AbsoluteFilePath } from "../../filesystem/absolute-file-path";
export interface AstNodeAttributes {
    [key: string]: string;
}
/** a node in the standardized Markdown/HTML AST */
export declare class AstNode {
    static scaffold(data?: any): AstNode;
    /** markdown type of AST node */
    type: string;
    /** HTML type of AST node */
    readonly tag: string;
    /** the file in which this AstNode occurs */
    readonly file: AbsoluteFilePath;
    /** the line in the file at which this AST node occurs */
    readonly line: number;
    /** textual content of this AST node */
    readonly content: string;
    /** the attributes of the node */
    readonly attributes: AstNodeAttributes;
    constructor(data: {
        type: string;
        tag: string;
        file: AbsoluteFilePath;
        line: number;
        content: string;
        attributes: AstNodeAttributes;
    });
    /** Returns the type of the corresponding ending node. */
    endType(): string;
    /**
     * Returns the content of the "href" attribute for link tags,
     * null otherwise.
     */
    htmlLinkTarget(): string | null;
    /** Returns whether this AstNode is an opening node. */
    isOpeningNode(): boolean;
    /** Returns whether this AstNode is a closing node. */
    isClosingNode(): boolean;
}
//# sourceMappingURL=ast-node.d.ts.map