"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ast_node_1 = require("../../standard-AST/ast-node");
const ast_node_list_1 = require("../../standard-AST/ast-node-list");
/** ClosingTagParser parses HTML blocks containing just a closing tag. */
class ClosingTagParser {
    constructor(tagMapper) {
        this.closingTagRE = /^\s*<[ ]*(\/[ ]*\w+)[ ]*>\s*$/;
        this.tagMapper = tagMapper;
    }
    /** Returns whether the given tag is a closing tag */
    isClosingTag(tag) {
        return this.closingTagRE.test(tag);
    }
    parse(tag, file, line) {
        const match = tag.match(this.closingTagRE);
        if (!match) {
            throw new Error(`no tag parsed in ${tag}`);
        }
        const tagName = match[1].replace(/ /g, "");
        const result = new ast_node_list_1.AstNodeList();
        result.push(new ast_node_1.AstNode({
            attributes: {},
            content: "",
            file,
            line,
            tag: tagName,
            type: this.tagMapper.typeForTag(tagName, {})
        }));
        return result;
    }
}
exports.ClosingTagParser = ClosingTagParser;
//# sourceMappingURL=closing-tag-parser.js.map