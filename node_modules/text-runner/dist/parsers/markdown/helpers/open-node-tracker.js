"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const unprinted_user_error_1 = require("../../../errors/unprinted-user-error");
/** helps find open MarkdownIt AST nodes */
class OpenNodeTracker {
    constructor() {
        this.nodes = [];
    }
    /** registers an opening MarkdownIt AST node */
    open(node) {
        this.nodes.push(node);
    }
    /** finds the opening node for the given closing node */
    close(node, file, line) {
        const openType = node.type.replace("_close", "_open");
        for (let i = this.nodes.length - 1; i >= 0; i--) {
            const result = this.nodes[i];
            if (result.type === openType) {
                this.nodes.splice(i, 1);
                return result;
            }
        }
        throw new unprinted_user_error_1.UnprintedUserError(`No opening node '${openType}' found for closing node '${node.type}'`, file.platformified(), line);
    }
    /** returns whether a node with the given type is open */
    has(type) {
        for (const node of this.nodes) {
            if (node.type === type) {
                return true;
            }
        }
        return false;
    }
}
exports.OpenNodeTracker = OpenNodeTracker;
//# sourceMappingURL=open-node-tracker.js.map