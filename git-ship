#!/bin/bash
source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/helpers/helpers.sh"


function add_steps {
  if [ "$target_branch_name" != "$initial_branch_name" ]; then
    if [ "$initial_open_changes" = true ]; then
      add_step "stash_open_changes"
    fi
  fi

  add_step "checkout_main_branch"
  add_step "fetch"
  add_step "rebase_tracking_branch"
  add_step "push"
  add_step "checkout $target_branch_name"
  add_step "merge_tracking_branch"
  add_step "merge $main_branch_name"
  add_step "ensure_has_shippable_changes"
  add_step "checkout_main_branch"
  add_step "squash_merge $target_branch_name '$message'"
  add_step "push"
  add_step "delete_branch $target_branch_name force"

  if [ "$target_branch_name" != "$initial_branch_name" ]; then
    add_step "checkout $initial_branch_name"
    if [ "$initial_open_changes" = true ]; then
      add_step "restore_open_changes"
    fi
  fi
}


function preconditions {
  if [ "$#" -gt 0 ] && [ "$1" != "-m" ]; then
    target_branch_name=$1
    ensure_has_branch "$target_branch_name"
    shift
  else
    target_branch_name=$(get_current_branch_name)
    ensure_no_open_changes "You cannot ship with uncommitted changes."
  fi

  ensure_is_feature_branch "$target_branch_name" "Only feature branches can be shipped."
  extract_message "$@"
}


function error_empty_commit {
  discard_open_changes
  undo_command

  echo_error_header
  echo_error "Aborting ship due to empty commit message"
  exit_with_error
}


function extract_message {
  message=''

  while getopts "m:" opt; do
    case "$opt" in
    m) message=$OPTARG
    esac
  done
}


run "$@"
