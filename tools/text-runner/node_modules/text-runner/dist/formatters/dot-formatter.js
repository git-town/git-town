"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colorette_1 = __importDefault(require("colorette"));
const path_1 = __importDefault(require("path"));
const print_code_frame_1 = require("../helpers/print-code-frame");
/** A minimalistic formatter, prints dots for each check */
class DotFormatter {
    // @ts-ignore: ignore unused variable
    constructor(stepCount, configuration) {
        this.configuration = configuration;
    }
    // @ts-ignore: okay to not use parameters here
    failed(activity, stepName, err, output) {
        console.log();
        console.log(colorette_1.default.dim(output));
        process.stdout.write(colorette_1.default.red(`${activity.file.platformified()}:${activity.line} -- `));
        console.log(err.message);
        print_code_frame_1.printCodeFrame(console.log, path_1.default.join(this.configuration.sourceDir, activity.file.platformified()), activity.line);
    }
    // @ts-ignore: okay to not use parameters here
    skipped(activity, stepName, output) {
        process.stdout.write(colorette_1.default.cyan("."));
    }
    // @ts-ignore: okay to not use parameters here
    success(activity, stepName, output) {
        process.stdout.write(colorette_1.default.green("."));
    }
}
exports.DotFormatter = DotFormatter;
//# sourceMappingURL=dot-formatter.js.map