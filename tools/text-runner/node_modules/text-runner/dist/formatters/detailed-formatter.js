"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const colorette_1 = __importDefault(require("colorette"));
const path_1 = __importDefault(require("path"));
const print_code_frame_1 = require("../helpers/print-code-frame");
/** A formatter that prints output and step names */
class DetailedFormatter {
    // @ts-ignore: unused parameter
    constructor(stepCount, configuration) {
        this.configuration = configuration;
    }
    // @ts-ignore: unused stepName
    failed(activity, stepName, e, output) {
        if (output !== "") {
            process.stdout.write(colorette_1.default.dim(output));
        }
        process.stdout.write(colorette_1.default.red(`${activity.file.platformified()}:${activity.line} -- `));
        console.log(e.message);
        const filePath = path_1.default.join(this.configuration.sourceDir, activity.file.platformified());
        print_code_frame_1.printCodeFrame(console.log, filePath, activity.line);
    }
    skipped(activity, stepName, output) {
        if (output !== "") {
            process.stdout.write(colorette_1.default.dim(output));
        }
        console.log(colorette_1.default.cyan(`${activity.file.platformified()}:${activity.line} -- skipping: ${stepName}`));
    }
    success(activity, stepName, output) {
        if (output !== "") {
            process.stdout.write(colorette_1.default.dim(output));
        }
        console.log(colorette_1.default.green(`${activity.file.platformified()}:${activity.line} -- ${stepName}`));
    }
}
exports.DetailedFormatter = DetailedFormatter;
//# sourceMappingURL=detailed-formatter.js.map