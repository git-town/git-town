import { AbsoluteFilePath } from "../../filesystem/absolute-file-path";
import { AstNodeList } from "../standard-AST/ast-node-list";
import { TagMapper } from "../tag-mapper";
/** HtmlParser converts HTML5 source into the standardized AST format. */
export declare class HTMLParser {
    private readonly tagMapper;
    constructor(tagMapper: TagMapper);
    /**
     * Parse returns the standard AST for the given HTML text.
     *
     * @param file The file in which the given text happens (for error messages)
     * @param startingLine The line at which this HTML snippet is located in the source document.
     *                     This parameter helps show correct line numbers for HTML snippets
     *                     that are embedded in Markdown documents.
     */
    parse(text: string, file: AbsoluteFilePath, startingLine: number): AstNodeList;
    /** returns whether the given HTML node is an empty text node */
    private isEmptyTextNode;
    /** returns the subtree of the given HTML AST whose root node has the given name */
    private findChildWithName;
    /**
     * converts the given HTML AST for an entire HTML document into the standard AST
     */
    private standardizeDocument;
    /** converts the given HTML AST node into the standard format */
    private standardizeNode;
    /** converts the given HTML tag with open and closing tag into the standard format */
    private standardizeOpenCloseTag;
    /** converts the given HTML standalone node into the standard format */
    private standardizeStandaloneNode;
    /** converts the given HTML text node into the standard format */
    private standardizeTextNode;
}
//# sourceMappingURL=html-parser.d.ts.map