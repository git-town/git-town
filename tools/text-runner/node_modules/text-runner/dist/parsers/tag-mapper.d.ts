import { AstNodeAttributes } from "./standard-AST/ast-node";
/**
 * TagMapper maps Remarkable node types to HTML tags and vice versa.
 *
 * Remarkable node types: bold_open, bold_close, image, explicitly
 * Tag types: "b", "/b", "img", etc
 */
export declare class TagMapper {
    /** Mappings of tags that have opening and closing varieties. */
    private static readonly OPEN_CLOSE_MAPPINGS;
    /** Mappings of tags that stand alone, i.e. have no opening and closing varieties. */
    private static readonly STANDALONE_MAPPINGS;
    /** Maps Remarkable types to their corresponding HTML tags */
    private readonly typeTagMappings;
    /** Maps HTML tag names to their corresponding Remarkable types */
    private readonly tagTypeMappings;
    constructor();
    isOpenCloseTag(tagName: string): boolean;
    isStandaloneTag(tagName: string): boolean;
    /** Returns the opening Remarkable type for the given HTML tag. */
    openingTypeForTag(tagName: string, attributes: AstNodeAttributes): string;
    /** Returns the HTML tag for the given Remarkable type. */
    tagForType(type: string): string;
    /** Returns the Markdown node type for the given HTML tag. */
    typeForTag(tag: string, attributes: AstNodeAttributes): string;
    /** Calculates the mappings from Remarkable types to HTML tags */
    private createTypeTagMappings;
    /** Calculates the mappings from HTML tags to Remarkable types */
    private createTagTypeMappings;
}
//# sourceMappingURL=tag-mapper.d.ts.map