"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * StringSearch is the search for a particular string in the text stream.
 * The search is over once the s
 * It reports success to its the  the given resolve function once when it finds the query string.
 * When reaching the given timeoutDuration, it abourts the search and calls the given reject function.
 */
class StringSearch {
    constructor(query, resolve, reject, text, timeout) {
        this.resolve = resolve;
        this.reject = reject;
        this.text = text;
        this.searchText = query;
        if (timeout != null) {
            this.timeoutDuration = timeout;
            setTimeout(this.onTimeout.bind(this), timeout);
        }
    }
    /**
     * Checks the given text for the searchText.
     * Calls the resolve function when it finds it.
     */
    scan() {
        if (this.text.toString().includes(this.searchText)) {
            this.resolve(this.searchText);
        }
    }
    /** called after this subscription times out */
    onTimeout() {
        this.reject(new Error(`Text "${this.searchText}" not found within ${this.timeoutDuration} ms. The captured text so far is:\n${this.text.toString()}`));
    }
}
exports.StringSearch = StringSearch;
