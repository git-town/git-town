{
  "include": [
    "features/**/*.feature"
  ],
  "exclude": [
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_parallel.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/nonconflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/dependent_changes.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/independent_changes.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/conflicting_commits.feature",
    "features/sync/current_branch/feature_branch/fetch_in_between.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_parallel.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/nonconflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/merge_sync_strategy/two_collaborators/happy_path.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/dependent_changes.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/independent_changes.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/conflicting_commits.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/happy_path.feature",
    "features/end_to_end/ship_prototype_branch_and_sync.feature",
    "features/detach/merge_conflict/dependent_changes.feature",
    "vendor/**/*.feature"
  ],
  "record": true,
  "fail-fast": true,
  "steps": [
    "^a brand-new Git repo$",
    "^I am outside a Git repo$",
    "^a Git repo with origin$",
    "^a local Git repo$",
    "^an upstream repo$",
    "^my repo's \".*\" remote is .*$",
    "^an additional \".*\" remote with URL .*$",
    "^I rename the \".*\" remote to .*$",
    "^a remote \".*\" pointing to .*$",
    "^my repo has a Git submodule$",
    "^Git has version \".*\"$",
    "^the origin is .*$",
    "^the main branch is \".*\"$",
    "^Git setting \".*\" is \".*\"$",
    "^.* Git setting \".*\" is \".*\"$",
    "^the committed configuration file:$",
    "^offline mode is enabled$",
    "^a folder .*$",
    [
      "^the branches$",
      "^the commits$"
    ],
    "^Git Town is not configured$",
    "^Git Town parent setting for branch \".*\" is .*$",
    "^the tags$",
    "^a remote tag \".*\" not on a branch$",
    "^the perennial branches are .*$",
    "^origin deletes the \".*\" branch$",
    "^origin ships the \".*\" branch using the \".*\" ship-strategy$",
    "^origin ships the \".*\" branch using the \".*\" ship-strategy as .*$",
    "^I amend this commit$",
    "^I add commit \".*\" to the \".*\" branch$",
    "^I add this commit to the current branch:$",
    "^I add this commit to the \".*\" branch$",
    "^the current branch is \".*$",
    "^the currently checked out commit is .*$",
    "^branch \".*\" is active in another worktree$",
    "^in a separate terminal I create branch \".*\" with commits$",
    "^a proposal for this branch exists at .*$",
    "^a proposal for this branch does not exist$",
    "^tool .*? is installed$",
    "^tool \".*\" is broken$",
    "^no tool to open browsers is installed$",
    "^the configuration file:$",
    "^an uncommitted file$",
    "^an uncommitted file \".*\" with content \".*\"$",
    "^an uncommitted file \".*\" with content:$",
    "^the committed file .*:$",
    "^I add an unrelated stash entry with file .*$",
    "^wait 1 second to ensure new Git timestamps$",
    "^I ran .*$",
    "^<LOCATION> Git setting \"git-town.new-branch-push-flag\" is ",
    "^<LOCATION> Git setting \"git-town.push-new-branches\" is ",
    "Git setting \"git-town.create-prototype-branches\" is ",
    "Git setting \"git-town-branch.*.branchtype\" is",
    [
      "^I resolve the conflict in \".*\"$",
      "^I resolve the conflict in \".*\" with:$",
      "^I resolve the conflict in \".*\" in the other worktree$",
      "^I run \".*\"$",
      "^I run \".*\" and enter into the dialog:$",
      "^I run \".*\" and close the editor$",
      "^I run \".*\" and enter \".*\" for the commit message$",
      "^I run \".*\" and enter an empty commit message$",
      "^I run \".*\" and enter into the dialogs:$",
      "^I run \".*\" in the \".*\" folder$",
      "^I run \".*\" in the other worktree$",
      "^I run \".*\" with these environment variables$",
      "^I run \".*\" in the other worktree and enter \".*\" for the commit message$",
      "^I pipe the following text into .*:$"
    ],
    "^I am not prompted for any parent branches$",
    "^Git Town runs the commands$",
    "^Git Town runs no commands$",
    "^Git Town runs without errors$",
    "^Git Town prints:$",
    "^Git Town prints something like:$",
    "^Git Town prints no output$",
    "^Git Town prints the error:$",
    "^Git Town does not print .*$",
    "^a rebase is now in progress$",
    "^no rebase is now in progress$",
    "^a merge is now in progress$",
    "^a merge is still in progress$",
    "^no merge is now in progress$",
    "^<LOCATION> Git setting \".*\" is now \".*\"$",
    "^<LOCATION> Git setting \".*\" now doesn't exist$",
    "^global Git setting \".*\" is (now|still) \".*\"$",
    "^global Git setting \".*\" (now|still) doesn't exist$",
    "^local Git setting \".*\" is (now|still) \".*\"$",
    "^local Git setting \".*\" (now|still) doesn't exist$",
    "^Git setting \".*\" is (now|still) \".*\"$",
    "^Git setting \".*\" (now|still) doesn't exist$",
    "Git setting \"git-town-branch.*.branchtype\" is (now|still) ",
    "Git setting \"git-town-branch.*.branchtype\" now doesn't exist$",
    "^the configuration file is now:$",
    "^the branches are now$",
    "^the current branch is (now|still) ",
    "^the current branch in the other worktree is still .*$",
    "^the previous Git branch is (now|still) .*$",
    "^the branches contain these files:$",
    "^this lineage exists now$",
    "^no lineage exists now$",
    "^the initial lineage exists now$",
    "^these commits exist now$",
    "^these committed files exist now$",
    "^no commits exist now$",
    "^commit \".*\" on branch \".*\" now has this full commit message$",
    "^the uncommitted file has content:$",
    "^file \".*\" (now|still) has content:$",
    "^file \".*\" still has content .*$",
    "^the main branch is (now|still) .*$",
    "^the perennial branches are (now|still) .*$",
    "^there is now no previous Git branch$",
    "^there are (now|still) no perennial branches$",
    "^branch \".*\" (now|still) has type .*$",
    "^Git Town is no longer configured$",
    "^the uncommitted file still exists$",
    "^no uncommitted files exist now$",
    "^an uncommitted file \".*\" exists now$",
    "^the home directory contains file \".*\" with content$",
    "^the initial branches exist now$",
    "^the initial commits exist now$",
    "^the initial branches and lineage exist now$",
    "^these tags exist now$",
    "^the initial tags exist now$",
    "^all branches are now synchronized$"
  ]
}
