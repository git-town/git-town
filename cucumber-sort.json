{
  "include": [
    "features/**/*.feature"
  ],
  "exclude": [
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_parallel.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/nonconflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/dependent_changes.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/independent_changes.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/conflicting_commits.feature",
    "features/sync/current_branch/feature_branch/fetch_in_between.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_parallel.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/conflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/compress_sync_strategy/two_collaborators/nonconflicting_changes_serial.feature",
    "features/sync/current_branch/feature_branch/merge_sync_strategy/two_collaborators/happy_path.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/dependent_changes.feature",
    "features/sync/current_branch/feature_branch/mixed_sync_strategies/independent_changes.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/conflicting_commits.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/two_collaborators/happy_path.feature",
    "features/end_to_end/ship_prototype_branch_and_sync.feature",
    "features/observe/give_existing_branch/multiple_branches.feature",
    "features/detach/merge_conflict/dependent_changes.feature",
    "features/prepend/beam/stack/dependent_changes.feature",
    "features/set_parent/hoist/rebase/dependent_changes.feature",
    "features/ship/always_merge/current_branch/additional_commits/before_undo/online.feature",
    "features/ship/always_merge/current_branch/ship_delete_tracking_branch/disabled.feature",
    "features/ship/always_merge/supplied_branch/ship_delete_tracking_branch/disabled.feature",
    "features/ship/fast_forward/current_branch/additional_commits/before_undo/offline.feature",
    "features/ship/fast_forward/current_branch/additional_commits/before_undo/online.feature",
    "features/ship/fast_forward/current_branch/ship_delete_tracking_branch/disabled.feature",
    "features/ship/fast_forward/supplied_branch/ship_delete_tracking_branch/disabled.feature",
    "features/ship/squash_merge/current_branch/delete_tracking_branch/disabled.feature",
    "features/ship/squash_merge/supplied_branch/delete_tracking_branch/disabled.feature",
    "features/swap/merge_conflict/dependent_changes.feature",
    "features/sync/all_branches/merge_sync_strategy/conflicts/multiple_conflicting_branches.feature",
    "features/sync/all_branches/merge_sync_strategy/conflicts/feature_branch_main_branch_conflict/conflict_feature_branch_main_branch.feature",
    "features/sync/all_branches/merge_sync_strategy/conflicts/feature_branch_main_branch_conflict/shipped_changes_conflict_with_existing_feature_branch.feature",
    "features/sync/all_branches/merge_sync_strategy/stack/conflicting_changes.feature",
    "features/sync/current_branch/feature_branch/change_repo_in_between/add_stash.feature",
    "features/sync/current_branch/feature_branch/change_repo_in_between/create_branch.feature",
    "features/sync/current_branch/feature_branch/rebase_sync_strategy/modified_commits/amended_commit.feature",
    "features/sync/stack/compress_sync_strategy/branches_gone/dependent_ancestor_shipped_and_related_change_on_main.feature",
    "features/sync/stack/merge_sync_strategy/branches_gone/dependent_ancestor_shipped_and_main_updates_same_location.feature",
    "features/sync/stack/merge_sync_strategy/oldest_shipped/parent_and_child_modify_same_file/no_auto_resolve_cli.feature",
    "features/sync/stack/merge_sync_strategy/oldest_shipped/parent_and_child_modify_same_file/no_auto_resolve_config.feature",
    "features/sync/stack/merge_sync_strategy/oldest_shipped/parent_deletes_child_modifies_file/enabled.feature",
    "vendor/**/*.feature"
  ],
  "record": true,
  "fail-fast": true,
  "steps": [
    "^a brand-new Git repo$",
    "^I am outside a Git repo$",
    "^a Git repo with origin$",
    "^a local Git repo$",
    "^an upstream repo$",
    "^my repo's \".*\" remote is .*$",
    "^an additional \".*\" remote with URL .*$",
    "^I rename the \".*\" remote to .*$",
    "^a remote \".*\" pointing to .*$",
    "^my repo has a Git submodule$",
    "^Git has version \".*\"$",
    "^the origin is .*$",
    "^the home directory contains file \".*\" with content$",
    "^the committed configuration file:$",
    "^the committed file",
    "^Git setting \"git-town.perennial-branches\" is ",
    [
      "^the branches$",
      "^the commits$"
    ],
    "^Git Town is not configured$",
    "^the main branch is \".*\"$",
    "^global Git setting \".*\" is",
    "^local Git setting \".*\" is",
    "^<LOCATION> Git setting \".*\" is",
    "^Git setting \".*\" is \".*\"$",
    "^offline mode is enabled$",
    "^Git Town parent setting for branch \".*\" is .*$",
    "^the tags$",
    "^a remote tag \".*\" not on a branch$",
    "^the perennial branches are .*$",
    "^origin deletes the \".*\" branch$",
    "^origin ships the \".*\" branch using the \".*\" ship-strategy",
    "^I amend this commit$",
    "^I add commit \".*\" to the \".*\" branch$",
    "^I add this commit to the .* branch",
    "^the current branch is \".*$",
    "^the currently checked out commit is .*$",
    "^branch \".*\" is active in another worktree$",
    "^in a separate terminal I create branch \".*\" with commits$",
    "^a proposal for this branch exists at .*$",
    "^a proposal for this branch does not exist$",
    "^tool .* is installed$",
    "^tool .* is broken$",
    "^no tool to open browsers is installed$",
    "^the configuration file:$",
    "^an uncommitted file",
    "^a folder .*$",
    "^I add an unrelated stash entry with file .*$",
    "^wait 1 second to ensure new Git timestamps$",
    "^I ran .*$",
    "Git setting \"git-town.new-branch-push-flag\" is ",
    "Git setting \"git-town.push-new-branches\" is ",
    "Git setting \"git-town.create-prototype-branches\" is ",
    "Git setting \"git-town-branch.*.branchtype\" is",
    [
      "^I resolve the conflict in",
      "^I run \".*\"",
      "^I pipe the following text into"
    ],
    "^I am not prompted for any parent branches$",
    "^Git Town runs",
    "^Git Town prints",
    "^Git Town does not print",
    "rebase is now in progress$",
    "merge is (now|still) in progress$",
    "^<LOCATION> Git setting \".*\" is now \".*\"$",
    "^<LOCATION> Git setting \".*\" now doesn't exist$",
    "^global Git setting \".*\" is (now|still)",
    "^global Git setting \".*\" (now|still) doesn't exist$",
    "^local Git setting \".*\" is (now|still)",
    "^local Git setting \".*\" (now|still) doesn't exist$",
    "^Git setting \".*\" is (now|still)",
    "^Git setting \".*\" (now|still) doesn't exist$",
    "Git setting \"git-town-branch.*.branchtype\" is (now|still) ",
    "Git setting \"git-town-branch.*.branchtype\" now doesn't exist$",
    "^the configuration file is now",
    "^the branches are now",
    "^the current branch is (now|still) ",
    "^the current branch in the other worktree is still .*$",
    "^the previous Git branch is (now|still)",
    "^(this|no|the initial) lineage exists now$",
    "^(these|no) commits exist now$",
    "^these committed files exist now$",
    "^commit \".*\" on branch \".*\" now has this full commit message$",
    "^the uncommitted file has content:$",
    "^file \".*\" (now|still) has content",
    "^the main branch is (now|still) .*$",
    "^the perennial branches are (now|still) .*$",
    "^there is now no previous Git branch$",
    "^there are (now|still) no perennial branches$",
    "^branch \".*\" (now|still) has type .*$",
    "^Git Town is no longer configured$",
    "^the uncommitted file still exists$",
    "^no uncommitted files exist now$",
    "^an uncommitted file \".*\" exists now$",
    "^the initial branches exist now$",
    "^the initial commits exist now$",
    "^the initial branches and lineage exist now$",
    "^the branches contain these files:$",
    "^these tags exist now$",
    "^the initial tags exist now$",
    "^all branches are now synchronized$"
  ]
}
