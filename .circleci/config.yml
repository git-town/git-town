version: 2

jobs:
  clone:
    docker:
      - image: circleci/golang:1.16.8
    steps:
      - checkout
      # build the binaries and store them in the workspace
      - run: make build
      - run: make setup-go
      - run: cp /go/bin/git-town /home/circleci/project/
      - run: cp /go/bin/godog /home/circleci/project/
      - run: cp /go/bin/golangci-lint /home/circleci/project/
      - run: ls /go/bin
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
  # runs all Go tests except the Cukes for ship and sync,
  # which the "go-s" job tests in parallel
  go:
    docker:
      - image: circleci/golang:1.16.8
    steps:
      # install vim for tests that require entering a commit message with an editor
      - run: sudo apt-get update && sudo apt-get install vim
      - attach_workspace:
          at: /home/circleci
      - run: mv ./git-town /go/bin/
      - run: mv ./godog /go/bin/
      - run: mv ./golangci-lint /go/bin/
      - run: echo 'export PATH=$PATH:/go/bin:/usr/local/go/bin' >> $BASH_ENV
      - run: make unit
      - run: make lint-go
      - run: echo $PATH
      - run:
          find features -type f -name '*.feature' | grep -v features/s | xargs
          godog --concurrency=$(nproc --all) --format=progress --strict
  # runs the Cucumber tests for ship and sync in parallel to the other ones
  go-s:
    docker:
      - image: circleci/golang:1.16.8
    steps:
      # install vim for tests that require entering a commit message with an editor
      - run: sudo apt-get update && sudo apt-get install vim
      - attach_workspace:
          at: /home/circleci
      - run: mv ./git-town /go/bin/
      - run: mv ./godog /go/bin/
      - run: mv ./golangci-lint /go/bin/
      - run: godog features/ship/current_branch/on_feature_branch/without_open_changes/empty_commit_message.feature
      - run: echo 'export PATH=$PATH:/go/bin:/usr/local/go/bin' >> $BASH_ENV
      - run: echo $PATH
      - run:
          find features -type f -name '*.feature' | grep features/s | xargs
          godog --concurrency=$(nproc --all) --format=progress --strict
  markdown:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: /home/circleci
      # move the binaries into the PATH
      - run: mkdir /home/circleci/bin
      - run: mv ./git-town /home/circleci/bin/
      - run: mv ./godog /home/circleci/bin/
      - run: mv ./golangci-lint /home/circleci/bin/
      # install dprint
      - run: curl -fsSL https://dprint.dev/install.sh | sh
      - run: echo 'export PATH=$HOME/.dprint/bin:$PATH' >> $BASH_ENV
      # run the linters
      - run: cd text-run && yarn
      - run: make test-md
workflows:
  version: 2
  all_tests:
    jobs:
      - clone
      - go:
          requires:
            - clone
      - go-s:
          requires:
            - clone
      - markdown:
          requires:
            - clone
